package us.jimschubert.haystackdemo.models


import com.fasterxml.jackson.annotation.JsonProperty
import javax.validation.constraints.NotNull

/**
 * Represents a problem with an API, modeled after IETF draft-nottingham-http-problem-07. This model represents a consistent structure across all client and server errors. For the purposes of this demo, this will not be transferred with content-type problem+json.
 *
 * @param type An absolute URI that identifies the problem type. When this member is not present, its value is assumed to be \"about:blank\".
 * @param title A short, human-readable summary of the problem type.
 * @param status The HTTP status code generated by the origin server for this occurrence of the problem.
 * @param detail An human readable explanation specific to this occurrence of the problem.
 * @param instance An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if de-referenced.
 * @param additional Additional details about the result.
 */
data class ProblemDetailsResponse(

    @get:NotNull
    @JsonProperty("title") val title: String,

    @JsonProperty("type") val type: String? = null,

    @JsonProperty("status") val status: Int? = null,

    @JsonProperty("detail") val detail: String? = null,

    @JsonProperty("instance") val instance: String? = null,

    @JsonProperty("additional") val additional: Map<kotlin.String, AdditionalProblemDetail>? = null
)

/**
 * Represents the additional details one may provide within the context of a [ProblemDetailsResponse].
 *
 * @param key A meaningful identifier to the caller.
 * @param value Extended details about the problem related to [key]
 */
data class AdditionalProblemDetail(

    @JsonProperty("key") val key: String? = null,

    @JsonProperty("value") val value: String? = null
)
